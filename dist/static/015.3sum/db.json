{"java":"import java.util.*;\r\npublic class Solution {\r\n    // 超时了\r\n    // public List<List<Integer>> threeSum(int[] nums) {\r\n    //     List list = new ArrayList();\r\n    //     if(nums.length < 3){\r\n    //         return list;\r\n    //     }\r\n    //     Map map=new HashMap(nums.length*nums.length);\r\n    //     for(int i = 1;i < nums.length;i++){\r\n    //         int numI = nums[i];\r\n    //         ArrayList arrOfNumI = (ArrayList)map.get(-numI);\r\n    //         if(arrOfNumI != null){\r\n    //             for(int k = 0;k < arrOfNumI.size(); k++){\r\n    //                 ArrayList copy = (ArrayList)((ArrayList)arrOfNumI.get(k)).clone();\r\n    //                 copy.add(numI);\r\n    //                 list.add(copy);\r\n    //             }\r\n                    \r\n    //         }\r\n    //         for(int j = 0; j < i;j++){\r\n    //             int numJ = nums[j];\r\n    //             int result = numI + numJ;\r\n\r\n    //             if(i != nums.length -1){\r\n    //                 ArrayList arrOfResult = (ArrayList)map.get(result);\r\n    //                 if(arrOfResult == null){\r\n    //                     arrOfResult = new ArrayList();\r\n    //                     ArrayList doublet = new ArrayList();\r\n    //                     doublet.add(numI);\r\n    //                     doublet.add(numJ);\r\n    //                     arrOfResult.add(doublet);\r\n    //                     map.put(result,arrOfResult);\r\n    //                 }else{\r\n    //                     ArrayList doublet = new ArrayList();\r\n    //                     doublet.add(numI);\r\n    //                     doublet.add(numJ);\r\n    //                     arrOfResult.add(doublet);\r\n    //                 }\r\n    //             }\r\n    //         }\r\n    //     }\r\n    //     HashSet resultSet = new HashSet();\r\n    //     for(int i = 0;i < list.size();i++){\r\n    //         List triplets = (List)list.get(i);\r\n    //         Collections.sort(triplets);\r\n    //         resultSet.add(triplets);\r\n    //     }\r\n    //     return new ArrayList(resultSet);\r\n    // }\r\n    public List<List<Integer>> threeSum(int[] nums) {\r\n        List list = new ArrayList();\r\n        if(nums.length < 3){\r\n            return list;\r\n        }\r\n        Arrays.sort(nums);\r\n        for(int i = 0;i < nums.length - 2;i++){\r\n            if(i > 0 && nums[i] == nums[i-1]){\r\n                continue;\r\n            }\r\n            int sum = nums[i];\r\n            int front = i+1;\r\n            int end = nums.length -1;\r\n            while(front < end){\r\n                if(end < nums.length -1 && nums[end] == nums[end+1]){\r\n                    end--;\r\n                    continue;\r\n                }\r\n                if(front>i+1 && nums[front] == nums[front-1]){\r\n                    front++;\r\n                    continue;\r\n                }\r\n                if(nums[front] + nums[end] == -sum){\r\n                    ArrayList triplet = new ArrayList();\r\n                    triplet.add(sum);\r\n                    triplet.add(nums[front]);\r\n                    triplet.add(nums[end]);\r\n                    list.add(triplet);\r\n                    end--;\r\n                    front++;\r\n                }else if(nums[front] + nums[end] > -sum){\r\n                    end--;\r\n                }else{\r\n                    front++;\r\n                }\r\n            }\r\n        }\r\n        return list;\r\n    }\r\n}"}