{"java":"public class Solution {\r\n    public int divide(int dividend, int divisor) {\r\n        if(dividend == Integer.MIN_VALUE && divisor == -1 || divisor == 0) {\r\n            return Integer.MAX_VALUE;\r\n        }\r\n        if(divisor == 1){\r\n            return dividend;\r\n        }\r\n        int positive = 1;\r\n        long dividendLong = dividend,divisorLong = divisor;\r\n        if(dividend < 0 && divisor > 0){\r\n            positive = -1;\r\n            dividendLong = - dividendLong;\r\n        }else if(dividend > 0 && divisor < 0){\r\n            positive = -1;\r\n            divisorLong = - divisorLong;\r\n        }else if(dividend < 0 && divisor < 0){\r\n            dividendLong = -dividendLong;\r\n            divisorLong = -divisorLong;\r\n        }\r\n        int result = ownDevide(dividendLong,divisorLong);\r\n        return positive * result;\r\n    }\r\n    private int ownDevide(long dividend, long divisor){\r\n        long initialDivisor = divisor;\r\n        if(dividend < divisor){\r\n            return 0;\r\n        }\r\n        int result = 1;\r\n        while(divisor << 1 < dividend && divisor << 1 > 0){\r\n                divisor = divisor << 1;\r\n                result = result << 1;\r\n        }\r\n        return result + ownDevide(dividend - divisor,initialDivisor);\r\n    }\r\n}"}