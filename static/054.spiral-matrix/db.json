{"java":"public class Solution {\r\n    List<Integer> ret = new ArrayList<Integer>();\r\n    public List<Integer> spiralOrder(int[][] matrix) {\r\n        this.ret = new ArrayList<Integer>();\r\n        if(matrix.length < 1) return this.ret;\r\n        int ylen = matrix[0].length;\r\n        int xlen = matrix.length;\r\n        int len = Math.min(xlen,ylen);\r\n        for(int i = 0;i <= (len-1)/2;i++){\r\n            _spiralReadOneTime(matrix,i);\r\n        }\r\n        return this.ret;\r\n    }\r\n    public void _spiralReadOneTime(int[][] matrix,int pos){\r\n        int ylen = matrix[0].length;\r\n        int xlen = matrix.length;\r\n        if(pos == xlen/2){\r\n            for(int i = pos;i < ylen-pos;i++)\r\n                this.ret.add(matrix[pos][i]);\r\n        }else if(pos == ylen/2){\r\n            for(int i = pos;i < xlen-pos;i++)\r\n                this.ret.add(matrix[i][pos]);\r\n        }else{\r\n            for(int i = pos;i < ylen-pos-1;i++){\r\n                this.ret.add(matrix[pos][i]);\r\n            }\r\n            for(int i = pos;i < xlen-pos-1;i++){\r\n                this.ret.add(matrix[i][ylen-1-pos]);\r\n            }\r\n            for(int i = pos;i < ylen-pos-1;i++){\r\n                this.ret.add(matrix[xlen-1-pos][ylen-1-i]);\r\n            }\r\n            for(int i = pos;i < xlen-pos-1;i++){\r\n                this.ret.add(matrix[xlen-1-i][pos]);\r\n            }\r\n        }\r\n        \r\n    }\r\n}"}