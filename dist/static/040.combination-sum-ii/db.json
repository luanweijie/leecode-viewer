{"java":"public class Solution {\r\n    List<List<Integer>> result = new ArrayList<List<Integer>>();\r\n    HashSet x = new HashSet();\r\n    public List<List<Integer>> combinationSum2(int[] candidates, int target) {\r\n        Arrays.sort(candidates);\r\n        dfs(candidates,0,target,new ArrayList<Integer>());\r\n        Iterator it = this.x.iterator();\r\n        while(it.hasNext()){\r\n            this.result.add((List)(it.next()));\r\n        }\r\n        return this.result;\r\n    }\r\n    public void dfs(int[] candidates,int start,int target,List<Integer> lastResult){\r\n        if(target == 0){\r\n            List<Integer> curResult = new ArrayList<Integer>(lastResult);\r\n            x.add(curResult);\r\n        }else{\r\n            for(int i = start; i < candidates.length;i++){\r\n                if(target >= candidates[i]){\r\n                    lastResult.add(candidates[i]);\r\n                    dfs(candidates,i+1,target - candidates[i],lastResult);\r\n                    lastResult.remove(lastResult.size()-1);\r\n                }else{\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n    }\r\n}"}