{"java":"/**\r\n * Definition for singly-linked list.\r\n * public class ListNode {\r\n *     int val;\r\n *     ListNode next;\r\n *     ListNode(int x) { val = x; }\r\n * }\r\n */\r\npublic class Solution {\r\n    public ListNode reverseKGroup(ListNode head, int k) {\r\n        if(k < 2){\r\n            return head;\r\n        }\r\n        return reverseKOneTime(head,k);\r\n    }\r\n    private ListNode reverseKOneTime(ListNode head, int k){\r\n        int i = 0;\r\n        for(ListNode temp = head;temp != null && i < k;i++,temp=temp.next);\r\n        if(i == k){\r\n            ListNode start = head, end = head;\r\n            for(i = 0;i < k-1;i++){\r\n                ListNode temp = end.next;\r\n                end.next = temp.next;\r\n                temp.next = start;\r\n                start = temp;\r\n            }\r\n            end.next = reverseKOneTime(end.next,k);\r\n            head = start;\r\n        }\r\n        return head;\r\n    }\r\n}"}