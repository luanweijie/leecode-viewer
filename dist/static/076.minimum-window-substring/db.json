{"java":"public class Solution {\r\n    public String minWindow(String s, String t) {\r\n        HashMap<Character,Integer> need =  new HashMap<Character,Integer>();\r\n        HashMap<Character,Integer> extra =  new HashMap<Character,Integer>();\r\n        for(int i = 0;i < t.length();i++){\r\n            if(need.get(t.charAt(i)) == null){\r\n                need.put(t.charAt(i),1);\r\n            }else{\r\n                need.put(t.charAt(i),need.get(t.charAt(i))+1);\r\n            }\r\n        }\r\n        int start = 0,end = start,maxLen = s.length()+1;\r\n        String result = \"\";\r\n        while(end < s.length() && start < s.length()){\r\n            while(!need.isEmpty()){\r\n                if(end < s.length()){\r\n                    char endChar = s.charAt(end);\r\n                    if(need.get(endChar) ==null){\r\n                        if(extra.get(endChar) == null){\r\n                            extra.put(endChar,1);\r\n                        }else{\r\n                            extra.put(endChar,extra.get(endChar)+1);\r\n                        }\r\n                    }else{\r\n                        int numsToFix = need.get(endChar);\r\n                        if(numsToFix == 1){\r\n                            need.remove(endChar);\r\n                        }else{\r\n                            need.put(endChar,numsToFix-1);\r\n                        }\r\n                    }\r\n                    end++;\r\n                }else{\r\n                    return result;\r\n                }\r\n            }\r\n            char startChar = s.charAt(start);\r\n            while(extra.get(startChar) != null){\r\n                int extraLeft = extra.get(startChar);\r\n                if(extraLeft == 1){\r\n                    extra.remove(startChar);\r\n                }else{\r\n                    extra.put(startChar,extraLeft-1);\r\n                }\r\n                start++;\r\n                startChar = s.charAt(start);\r\n            }\r\n            if(end - start < maxLen){\r\n                maxLen = end - start +1;\r\n                result = s.substring(start,end);\r\n            }\r\n            if(end < s.length() && start < s.length()){\r\n                need.put(startChar,1);\r\n                start++;\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n}"}