{"javascript":"/**\r\n * @param {number[]} nums1\r\n * @param {number[]} nums2\r\n * @return {number}\r\n */\r\nvar findMedianSortedArrays = function(nums1, nums2) {\r\n        var length = nums1.length + nums2.length;\r\n        if(length % 2 ){\r\n            return getIndexK(nums1,0,nums2,0,(1+length)/2)\r\n        }else{\r\n            return (getIndexK(nums1,0,nums2,0,(length)/2)+getIndexK(nums1,0,nums2,0,(length)/2+1))/2\r\n        }\r\n    };\r\n\r\n\r\n\r\nfunction getIndexK(a,startA,b,startB,k){\r\n        //具体就是拿前一个数组的第k/2个元素跟后一个数组的第k/2个元素比大小\r\n        //如果前一个小,那说明前一个数组的第k/2个元素最最最多也就是总排行第k-1大的那个,不能更多,所以抛弃掉前一个数组的前k/2个元素\r\n        //如果后一个小,同理\r\n        //如果相等 说明这两个元素都是排行第k大的元素 直接返回\r\n        if(a.length - startA > b.length - startB){\r\n            return getIndexK(b,startB,a,startA,k);\r\n        }\r\n        if(startA >= a.length){\r\n            return b[startB+k-1];\r\n        }\r\n        if(k==1)\r\n            return Math.min(a[startA],b[startB]);\r\n        var pa = Math.min(a.length - startA, Math.floor(k/2)),pb = k - pa;\r\n        if(a[startA+pa-1] > b[startB+pb-1]){\r\n            return getIndexK(a,startA,b,startB+pb,k-pb)\r\n        }else if(a[startA+pa-1] < b[startB+pb-1]){\r\n            return getIndexK(a,startA+pa,b,startB,k-pa)\r\n        }else{\r\n            return a[startA+pa-1];\r\n        }\r\n    }"}