{"java":"/**\r\n * Definition for a binary tree node.\r\n * public class TreeNode {\r\n *     int val;\r\n *     TreeNode left;\r\n *     TreeNode right;\r\n *     TreeNode(int x) { val = x; }\r\n * }\r\n */\r\npublic class Solution {\r\n    List<List<Integer>> result = new ArrayList<List<Integer>>();\r\n    public List<List<Integer>> pathSum(TreeNode root, int sum) {\r\n        this.result = new ArrayList<List<Integer>>();\r\n        if(root == null) return this.result;\r\n        dfs(root,0,new ArrayList<Integer>(),sum);\r\n        return this.result;\r\n    }\r\n    public void dfs(TreeNode root, int curSum, ArrayList<Integer> curResult,int target){\r\n        curSum += root.val;\r\n        curResult.add(root.val);\r\n        if(root.left != null && root.right != null){\r\n            dfs(root.left,curSum,curResult,target);\r\n            dfs(root.right,curSum,curResult,target);    \r\n        }else if(root.left == null && root.right == null){\r\n            if(curSum == target){\r\n                this.result.add(new ArrayList<Integer>(curResult));\r\n            }\r\n        }else if(root.left == null){\r\n            dfs(root.right,curSum,curResult,target);\r\n        }else{\r\n            dfs(root.left,curSum,curResult,target);\r\n        }\r\n        curResult.remove(curResult.size()-1);\r\n    }\r\n}"}