{"java":"/**\r\n * Definition for an interval.\r\n * public class Interval {\r\n *     int start;\r\n *     int end;\r\n *     Interval() { start = 0; end = 0; }\r\n *     Interval(int s, int e) { start = s; end = e; }\r\n * }\r\n */\r\npublic class Solution {\r\n    public List<Interval> insert(List<Interval> intervals, Interval newInterval) {\r\n        List<Interval> result = new ArrayList<Interval>();\r\n        int i = 0;\r\n        boolean added = false;\r\n        for(;i < intervals.size();i++){\r\n            Interval cur = intervals.get(i);\r\n            if(cur.end < newInterval.start){\r\n                result.add(cur);\r\n            }else if(cur.start <= newInterval.start && cur.end < newInterval.end  ){\r\n                //后面的情况里 cur.end >= newInterval.start\r\n                newInterval.start = cur.start;\r\n            }else if(cur.start <= newInterval.start && newInterval.end <= cur.end){\r\n                added = true;\r\n                for(;i < intervals.size();i++) result.add(intervals.get(i));\r\n                break;\r\n            }else if(cur.start > newInterval.start && newInterval.end > cur.end){\r\n                continue;\r\n            }else if(cur.start > newInterval.start && newInterval.end <= cur.end && newInterval.end >= cur.start){\r\n                newInterval.end = cur.end;\r\n            }else{\r\n                result.add(newInterval);\r\n                added = true;\r\n                for(;i < intervals.size();i++) result.add(intervals.get(i));\r\n                break;\r\n            }\r\n        }\r\n        if(!added){\r\n            result.add(newInterval);\r\n        }\r\n        return result;\r\n    }\r\n}"}