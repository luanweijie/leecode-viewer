{"java":"/**\r\n * Definition for singly-linked list.\r\n * public class ListNode {\r\n *     int val;\r\n *     ListNode next;\r\n *     ListNode(int x) { val = x; }\r\n * }\r\n */\r\n/**\r\n * Definition for a binary tree node.\r\n * public class TreeNode {\r\n *     int val;\r\n *     TreeNode left;\r\n *     TreeNode right;\r\n *     TreeNode(int x) { val = x; }\r\n * }\r\n */\r\npublic class Solution {\r\n    public TreeNode sortedListToBST(ListNode head) {\r\n        if(head == null) return null;\r\n        ArrayList<Integer> nums = new ArrayList<Integer>();\r\n        while(head!=null){\r\n            nums.add(head.val);\r\n            head = head.next;\r\n        }\r\n        Integer[] numArray = nums.toArray(new Integer[nums.size()]);\r\n        return _formSubBST(numArray,0,numArray.length-1);\r\n    }\r\n    public TreeNode _formSubBST(Integer[] nums,int start,int end){\r\n        if(end < start) return null;\r\n        int middle =  (start + end)/2;\r\n        TreeNode cur =  new TreeNode(nums[middle]);\r\n        cur.left = _formSubBST(nums,start,middle-1);\r\n        cur.right = _formSubBST(nums,middle+1,end);\r\n        return cur;\r\n    }\r\n}"}