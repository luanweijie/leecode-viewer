{"java":"public class Solution {\r\n    public int ladderLength(String beginWord, String endWord, Set<String> wordList) {\r\n        if(beginWord.equals(endWord)){\r\n            return 1;\r\n        }\r\n        wordList.add(endWord);\r\n        wordList.remove(beginWord);\r\n        HashSet<String> already = new HashSet<String>();\r\n        already.add(beginWord);\r\n        int result = 1;\r\n        while(wordList.contains(endWord)){\r\n            result++;\r\n            if(already.isEmpty()) return 0;\r\n            HashSet<String> newAlready = new HashSet<String>();\r\n            for(String cur : already){\r\n                StringBuilder curr = new StringBuilder(cur);\r\n                if(difference(cur,endWord) == 1) return result;\r\n                for(int i = 0;i < cur.length();i++){\r\n                    char c = curr.charAt(i);\r\n                    for(int j = 0; j < 26;j++){\r\n                        curr.setCharAt(i,(char)('a'+j)); \r\n                        if(wordList.contains(curr.toString())){\r\n                            wordList.remove(curr.toString());\r\n                            newAlready.add(curr.toString());\r\n                        }\r\n                    }\r\n                    curr.setCharAt(i,c);\r\n                }\r\n            }\r\n            already = newAlready;\r\n        }\r\n        return result;    \r\n    }\r\n    public int difference(String s, String t) {\r\n        int result = 0;\r\n        for(int i = 0; i < s.length();i++){\r\n            if(s.charAt(i) != t.charAt(i)){\r\n                if(++result > 1){\r\n                    return result;\r\n                }\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n}"}