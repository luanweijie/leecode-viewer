{"java":"public class Solution {\r\n    public List<String> restoreIpAddresses(String s) {\r\n        List<String> res = new ArrayList<>();\r\n        if (s.length() == 0) return res;\r\n        dfs(res, s, 0, \"\");\r\n        return res;\r\n    }\r\n    //自己写的比较乱 考虑的edge case太多\r\n    //参考了网上的一份代码\r\n    public void dfs(List<String> res, String s, int m, String tempS) {\r\n        if (s.length() == 0) {\r\n            if (m == 4) {\r\n                res.add(tempS.substring(1));\r\n                return;\r\n            }\r\n        } else {\r\n            // 1 digit\r\n            if (s.length() - 1 >= 4 - m - 1 && s.length() - 1 <= (4 - m - 1) * 3) {\r\n                dfs(res, s.substring(1), m + 1, tempS + \".\" + s.substring(0,1)); \r\n            }\r\n            // 2 digits\r\n            if (s.length() >= 2 && s.length() - 2 >= 4 - m - 1 && s.length() - 2 <= (4 - m - 1) * 3) {\r\n                if (Integer.valueOf(s.substring(0,2)) >= 10) {\r\n                    dfs(res, s.substring(2), m + 1, tempS + \".\" + s.substring(0,2));\r\n                }\r\n            }\r\n            // 3 digits\r\n            if (s.length() >= 3 && s.length() - 3 >= 4 - m - 1 && s.length() - 3 <= (4 - m - 1) * 3) {\r\n                if (Integer.valueOf(s.substring(0,3)) >= 100 && Integer.valueOf(s.substring(0,3)) <= 255) {\r\n                    dfs(res, s.substring(3), m + 1, tempS + \".\" + s.substring(0,3));\r\n                }\r\n            }\r\n        }\r\n    }\r\n}"}