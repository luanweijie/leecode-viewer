{"java":"public class Solution {\r\n    //这道题真心有难度\r\n    //中间不是TLE就是MLE\r\n    //虽然就是一个BFS \r\n    //但是其中搜索当前能够到达的点的集合的过程还是不容易想到\r\n    //其次 为了避免LTE 而没有直接存储路径\r\n    //值得二刷\r\n    ArrayList<List<String>> result = new ArrayList<List<String>>();\r\n    public List<List<String>> findLadders(String beginWord, String endWord, Set<String> wordList) {\r\n        result = new ArrayList<List<String>>();\r\n        if(beginWord == endWord){\r\n            ArrayList<String> cur = new ArrayList<String>();\r\n            cur.add(beginWord);\r\n            result.add(cur);\r\n            return result;\r\n        }\r\n        wordList.add(endWord);\r\n        wordList.remove(beginWord);\r\n        HashMap<String,Set> prev = new HashMap<String,Set>();\r\n        HashSet<String> already = new HashSet<String>();\r\n        already.add(beginWord);\r\n        while(wordList.contains(endWord)){\r\n            if(already.isEmpty()) return result;\r\n            HashMap<String,Set> curMap = new HashMap<String,Set>();\r\n            HashSet<String> newAlready = new HashSet<String>();\r\n            for(String cur : already){\r\n                StringBuilder curr = new StringBuilder(cur);\r\n                for(int i = 0;i < cur.length();i++){\r\n                    char c = curr.charAt(i);\r\n                    for(int j = 0; j < 26;j++){\r\n                        curr.setCharAt(i,(char)('a'+j)); \r\n                        if(wordList.contains(curr.toString())){\r\n                            newAlready.add(curr.toString());\r\n                            if(curMap.get(curr.toString()) == null){\r\n                                HashSet<String> cur2curr = new HashSet<String>();\r\n                                cur2curr.add(cur);\r\n                                curMap.put(curr.toString(),cur2curr);\r\n                            }else{\r\n                                Set<String> cur2curr = curMap.get(curr.toString());\r\n                                cur2curr.add(cur);\r\n                            }\r\n                        }\r\n                    }\r\n                    curr.setCharAt(i,c);\r\n                }\r\n            }\r\n            for(String newAlreadyOne:newAlready){\r\n                wordList.remove(newAlreadyOne);\r\n                prev.put(newAlreadyOne,curMap.get(newAlreadyOne));\r\n            }\r\n            already = newAlready;\r\n        }\r\n        ArrayList<String> curList =new ArrayList<String>();\r\n        curList.add(endWord);\r\n        _form(prev,endWord,curList);\r\n        return result;\r\n    }\r\n    public void _form(HashMap<String,Set> prev, String endWord,ArrayList<String> curList){\r\n        if(prev.get(endWord) == null){\r\n            result.add(new ArrayList<String>(curList));\r\n        }else{\r\n            Set<String> curPrev = prev.get(endWord);\r\n            for(String s : curPrev){\r\n                curList.add(0,s);\r\n                _form(prev,s,curList);\r\n                curList.remove(0);\r\n            }\r\n        }\r\n    }\r\n    \r\n    \r\n}"}