{"java":"/**\r\n * Definition for a binary tree node.\r\n * public class TreeNode {\r\n *     int val;\r\n *     TreeNode left;\r\n *     TreeNode right;\r\n *     TreeNode(int x) { val = x; }\r\n * }\r\n */\r\npublic class Solution {\r\n    public class Node{\r\n        int val;\r\n        TreeNode tn;\r\n        Node(int v,TreeNode t){\r\n            val = v;\r\n            tn = t;\r\n        }\r\n    }\r\n    public int sumNumbers(TreeNode root) {\r\n        if(root == null) return 0;\r\n        int result = 0;\r\n        Stack<Node> st = new Stack<Node>();\r\n        st.push(new Node(root.val,root));\r\n        while(!st.isEmpty()){\r\n            Stack<Node> curSt = new Stack<Node>();\r\n            while(!st.isEmpty()){\r\n                Node cur = st.pop();\r\n                if(cur.tn.left == null && cur.tn.right == null){\r\n                    result += cur.val;\r\n                }else{\r\n                    if(cur.tn.left != null){\r\n                        curSt.push(new Node(cur.val*10+cur.tn.left.val,cur.tn.left));\r\n                    }\r\n                    if(cur.tn.right != null){\r\n                        curSt.push(new Node(cur.val*10+cur.tn.right.val,cur.tn.right));\r\n                    }\r\n                }\r\n            }\r\n            st = curSt;\r\n        }\r\n        return result;\r\n    }\r\n}"}