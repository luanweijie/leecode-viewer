{"java":"public class Solution {\r\n    public int maxProfit(int[] prices) {\r\n        if(prices.length < 2) return 0;\r\n        int maxPF = 0;\r\n        int[] left2Right = new int[prices.length];\r\n        int min = prices[0],max = min;\r\n        left2Right[0] = 0;\r\n        int maxProfitLeft2Right = 0;\r\n        for(int i = 1;i < prices.length;i++){\r\n            if(prices[i] > min){\r\n                if(prices[i] > max){\r\n                    max = prices[i];\r\n                    maxProfitLeft2Right = Math.max(max -min,maxProfitLeft2Right);\r\n                }\r\n            }else if(prices[i] < min){\r\n                min = max = prices[i];\r\n            }\r\n            left2Right[i] = maxProfitLeft2Right;\r\n        }\r\n        maxPF = maxProfitLeft2Right;\r\n        int[] right2Left = new int[prices.length];\r\n        right2Left[prices.length-1] = 0;\r\n        min = max = prices[prices.length-1];\r\n        int maxProfitRight2Left = 0;\r\n        for(int i = prices.length-2;i >= 2;i--){\r\n            if(prices[i] < max){\r\n                if(prices[i] < min){\r\n                    min = prices[i];\r\n                    if(max - min > maxProfitRight2Left){\r\n                        maxProfitRight2Left = max - min;\r\n                        if(maxProfitRight2Left + left2Right[i-1] > maxPF){\r\n                            maxPF = maxProfitRight2Left + left2Right[i-1];\r\n                        }\r\n                    }\r\n                }\r\n            }else if(prices[i] > max){\r\n                min = max = prices[i];\r\n            }\r\n        }\r\n        return maxPF;\r\n    }\r\n    \r\n}"}