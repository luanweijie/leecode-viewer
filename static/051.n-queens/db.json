{"java":"public class Solution {\r\n    ArrayList<List<String>> ret = new ArrayList<List<String>>();\r\n    public List<List<String>> solveNQueens(int n) {\r\n        this.ret = new ArrayList<List<String>>();\r\n        char[][] board = new char[n][n];\r\n        for(int i = 0;i < n;i++)\r\n            Arrays.fill(board[i],'.');\r\n        _solve(board,0,n);\r\n        return this.ret;\r\n    }\r\n    public void _solve(char[][] board, int pos,int n){\r\n        if(pos == n){\r\n            ArrayList<String> result = new ArrayList<String>();\r\n            for(int i = 0;i < n;i++){\r\n                result.add(new String(board[i]));\r\n            }\r\n            this.ret.add(result);\r\n            return;\r\n        }\r\n        for(int i = 0;i < n;i++){\r\n            board[pos][i] = 'Q';\r\n            if(_checkPos(board,pos,i,n)) _solve(board,pos+1,n);\r\n            board[pos][i] = '.';\r\n        }\r\n    }\r\n    public boolean _checkPos(char[][]board,int x,int y,int n){\r\n        if(x == 0) return true;\r\n        for(int i = 0;i < x;i++){\r\n            if(board[i][y] == 'Q') return false;\r\n        }\r\n        for(int i = 0;i < n;i++){\r\n            if(i != y && board[x][i] == 'Q') return false;\r\n        }\r\n        int left = y-1,right = y+1;\r\n        x--;\r\n        while(left >= 0 || right < n){\r\n            if(x < 0) return true;\r\n            if((left >= 0 && board[x][left] == 'Q') || (right < n && board[x][right] == 'Q')) return false;\r\n            x--;left--;right++;\r\n        }\r\n        return true;\r\n    }\r\n}"}