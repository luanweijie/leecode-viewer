{"java":"public class Solution {\r\n    public int longestConsecutive(int[] nums) {\r\n        if(nums.length < 2) return nums.length;\r\n        HashSet<Integer> set = new HashSet<Integer>();\r\n        for(int i = 0;i < nums.length;i++){\r\n            set.add(nums[i]);\r\n        }\r\n        int maxLen = 1;\r\n        \r\n        while(!set.isEmpty()){\r\n            Iterator<Integer> it = set.iterator();\r\n            int cur = it.next();\r\n            int len = 1;\r\n            HashSet<Integer> visited = new HashSet<Integer>();\r\n            visited.add(cur);\r\n            int start = cur-1,end = cur+1;\r\n            while(true){\r\n                if(!set.contains(start) && !set.contains(end)){\r\n                    break;\r\n                }else{\r\n                    if(set.contains(start)){\r\n                        visited.add(start);\r\n                        start--;\r\n                        len++;\r\n                    }\r\n                    if(set.contains(end)){\r\n                        visited.add(end);\r\n                        end++;\r\n                        len++;\r\n                    }\r\n                }\r\n            }\r\n            if(len > maxLen){\r\n                maxLen = len;\r\n            }\r\n            for(Integer i : visited){\r\n                set.remove(i);\r\n            }\r\n        }\r\n        return maxLen;\r\n    }\r\n}"}