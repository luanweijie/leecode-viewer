{"java":"public class Solution {\r\n    public int longestValidParentheses(String s) {\r\n        int[] nums = new int[s.length()];\r\n        //把括号字符串转换为-1,+1的数组\r\n        int count = 0,total = 0,max = 0,start =0;\r\n        for(int i = 0;i < s.length();i++){\r\n            nums[i] = s.charAt(i) == '('? 1:-1;\r\n            total = total + nums[i];\r\n            if(total < 0){\r\n                total = 0;\r\n                count = 0;\r\n                start = i+1;\r\n                continue;\r\n            }\r\n            count++;\r\n            if(total == 0 && count > max){\r\n                max = count;\r\n            }\r\n        }\r\n        if(total > 0 && (nums.length - start) > max){\r\n            count = 0;total = 0;\r\n            for(int j = nums.length-1;j >= start;j--){\r\n                total = total + nums[j];\r\n                if(total > 0){\r\n                    total = 0;\r\n                    count = 0;\r\n                    continue;\r\n                }\r\n                count++;\r\n                if(total == 0 && count > max){\r\n                    max = count;\r\n                }\r\n            }\r\n        } \r\n        return max;\r\n    }\r\n}"}