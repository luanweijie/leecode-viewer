{"java":"public class Solution {\r\n    public String longestPalindrome(String s) {\r\n        if(s.length() < 2){\r\n            return s;\r\n        }\r\n        char[] chars = s.toCharArray();\r\n        int len = chars.length;\r\n        int maxLength = 1;\r\n        int maxIndex = 0;\r\n        //定义矩阵isPalindrome,isPalindrome[i][j]表示s[i]..s[j]组成的字符串是否是最长回文\r\n        boolean[][] isPalindrome = new boolean[len][len];\r\n\r\n        for(int i = 0; i < len;i++){\r\n            isPalindrome[i][i] = true;\r\n        }\r\n        for(int i =0;i < len -1;i++){\r\n            if(chars[i] == chars[i+1]){\r\n                isPalindrome[i][i+1] = true;\r\n                maxLength = 2;\r\n                maxIndex = i;\r\n            }\r\n        }\r\n        //从iP[0][2]开始沿斜向遍历到ip[len-1-2][len-1]\r\n        //又从iP[0][3]开始沿斜向遍历到ip[len-1-3][len-1]\r\n        for(int j = 2; j < len;j++){\r\n            for(int i = 0;i < len - j;i++){\r\n                if(isPalindrome[i+1][i+j-1]){\r\n                    if(chars[i] == chars[i+j]){\r\n                        isPalindrome[i][i+j] = true;\r\n                        if(j+1 > maxLength){\r\n                            maxLength = j+1;\r\n                            maxIndex = i;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return s.substring(maxIndex,maxIndex + maxLength);\r\n    }\r\n}"}