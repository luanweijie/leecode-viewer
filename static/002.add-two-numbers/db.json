{"javascript":"/**\r\n * Definition for singly-linked list.\r\n * function ListNode(val) {\r\n *     this.val = val;\r\n *     this.next = null;\r\n * }\r\n */\r\n/**\r\n * @param {ListNode} l1\r\n * @param {ListNode} l2\r\n * @return {ListNode}\r\n */\r\nvar addTwoNumbers = function(l1, l2) {\r\n    var start = l1;\r\n    var lastInc = 0;\r\n    if(l1 === null){\r\n        return l2\r\n    }\r\n    if(l2 === null){\r\n        return l1\r\n    }\r\n    while(l1 !== null && l2 !== null){\r\n        var value = l1.val + l2.val + lastInc;\r\n        if(value > 9){\r\n            l1.val = value % 10;\r\n            lastInc = 1;\r\n        }else{\r\n            l1.val = value;\r\n            lastInc = 0;\r\n        }\r\n        var l1Last = l1,l2Last = l2;\r\n        l1 = l1.next,l2 = l2.next;\r\n    }\r\n    if((l1 === null) && (l2 !== null)){\r\n        l1Last.next = l2;\r\n        var val = l2.val + lastInc;\r\n        l2.val = val % 10;\r\n        lastInc = val > 9;\r\n        while(lastInc){\r\n            if(l2.next){\r\n                val = l2.next.val + lastInc;\r\n                l2.next.val = val % 10;\r\n                lastInc = val > 9;\r\n                l2 = l2.next;\r\n            }else{\r\n                lastInc = 0;\r\n                l2.next = {val:1,next:null}\r\n            }\r\n        }\r\n    }else if((l2 === null) && (l1 !== null)){\r\n        var val = l1.val + lastInc;\r\n        l1.val = val % 10;\r\n        lastInc = val > 9;\r\n        while(lastInc){\r\n            if(l1.next){\r\n                val = l1.next.val + lastInc;\r\n                l1.next.val = val % 10;\r\n                lastInc = val > 9;\r\n                l1 = l1.next;\r\n            }else{\r\n                lastInc = 0;\r\n                l1.next = {val:1,next:null}\r\n            }\r\n        }\r\n    }else{\r\n        if(lastInc){\r\n            l1Last.next = {val:lastInc,next:null}    \r\n        }\r\n    }\r\n    return start;\r\n};"}